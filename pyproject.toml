[build-system]
requires = ["uv>=0.5.6,<0.6.0"]
# The uv backend entered preview mode in https://github.com/astral-sh/uv/pull/8886/files
# with the 0.5.0 release. See also https://github.com/astral-sh/uv/issues/3957 for tracking.
build-backend = "uv"

[project]
name = "semantic_pydantic"
version = "0.0.4-dev"
description = "Integration between the Bioregistry and Pydantic type annotations."
readme = "README.md"
authors = [
    { name = "Charles Tapley Hoyt", email = "cthoyt@gmail.com" }
]
maintainers = [
    { name = "Charles Tapley Hoyt", email = "cthoyt@gmail.com" }
]

# See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#classifiers
# Search tags using the controlled vocabulary at https://pypi.org/classifiers
classifiers = [
    "Development Status :: 1 - Planning",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Framework :: Pytest",
    "Framework :: tox",
    "Framework :: Sphinx",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Framework :: FastAPI",
]
keywords = [
    "snekpack", # please keep this keyword to credit the cookiecutter-snekpack template
    "cookiecutter",
    "pydantic",
    "bioregistry",
    "fastapi",
]

# License Information. This can be any valid SPDX identifiers that can be resolved
# with URLs like https://spdx.org/licenses/MIT
# See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license
license = { file = "LICENSE" }

requires-python = ">=3.9"
dependencies = [
    "bioregistry",
    "requests",
    "pydantic>=2.0",
]

[project.optional-dependencies]
tests = [
    "pytest",
    "coverage",
]
fastapi = [
    "fastapi",
    "httpx",
]
docs = [
    "sphinx>=8",
    "sphinx-rtd-theme>=3.0",
    "sphinx_automodapi",
    "autodoc_pydantic",
]

# See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#urls
[project.urls]
"Bug Tracker" = "https://github.com/cthoyt/semantic-pydantic/issues"
Homepage = "https://github.com/cthoyt/semantic-pydantic"
Repository = "https://github.com/cthoyt/semantic-pydantic.git"
Documentation = "https://semantic-pydantic.readthedocs.io"

[tool.cruft]
skip = [
    "**/__init__.py",
    "tests/*"
]

# MyPy, see https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
plugins = [
    "pydantic.mypy",
]

# Doc8, see https://doc8.readthedocs.io/en/stable/readme.html#ini-file-usage
[tool.doc8]
max-line-length = 120

# Pytest, see https://docs.pytest.org/en/stable/reference/customize.html#pyproject-toml
[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]

# Coverage, see https://coverage.readthedocs.io/en/latest/config.html
[tool.coverage.run]
branch = true
source = [
    "semantic_pydantic",
]
omit = [
    "tests/*",
    "docs/*",
]

[tool.coverage.paths]
source = [
    "src/semantic_pydantic",
    ".tox/*/lib/python*/site-packages/semantic_pydantic",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == \"__main__\":",
    "if TYPE_CHECKING:",
    "def __str__",
    "def __repr__",
]

[tool.ruff]
line-length = 100
extend-include = ["*.ipynb"]

[tool.ruff.lint]
# See https://docs.astral.sh/ruff/rules
extend-select = [
    "F", # pyflakes
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "C90", # mccabe
    "I", # isort
    "UP", # pyupgrade
    "D", # pydocstyle
    "DOC", # pydoclint
    "B", # bugbear
    "S", # bandit
    "T20", # print
    "N", # pep8 naming
    "ERA", # eradicate commented out code
    "NPY", # numpy checks
    "RUF", # ruff rules
    "C4", # comprehensions
]
ignore = [
    "D105", # Missing docstring in magic method
    "E203", # Black conflicts with the following
]

# See https://docs.astral.sh/ruff/settings/#per-file-ignores
[tool.ruff.lint.per-file-ignores]
# Ignore security issues in the version.py, which are inconsistent
"src/semantic_pydantic/version.py" = ["S603", "S607"]
# Ignore commented out code in Sphinx configuration file
"docs/source/conf.py" = ["ERA001"]
# Prints are okay in notebooks
"notebooks/**/*.ipynb" = ["T201"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"
known-third-party = [
    "tqdm",
]
known-first-party = [
    "semantic_pydantic",
    "tests",
]

[tool.ruff.format]
# see https://docs.astral.sh/ruff/settings/#format_docstring-code-format
docstring-code-format = true
